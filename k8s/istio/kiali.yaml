# Source: crds/crds.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: monitoringdashboards.monitoring.kiali.io
spec:
  group: monitoring.kiali.io
  names:
    kind: MonitoringDashboard
    listKind: MonitoringDashboardList
    plural: monitoringdashboards
    singular: monitoringdashboard
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
---
# Source: kiali-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kiali
  namespace: istio-system
  labels:
    helm.sh/chart: kiali-server-1.22.0
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali-server
    version: "v1.22.0"
    app.kubernetes.io/version: "v1.22.0"
    app.kubernetes.io/managed-by: Helm

---
## Source: kiali-server/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kiali
  namespace: istio-system
  labels:
    helm.sh/chart: kiali-server-1.22.0
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali-server
    version: "v1.22.0"
    app.kubernetes.io/version: "v1.22.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    additional_display_details:
    - annotation: kiali.io/api-spec
      icon_annotation: kiali.io/api-type
      title: API Documentation
    api:
      namespaces:
        exclude:
        - istio-operator
        - kube.*
        - openshift.*
        - ibm.*
        - kiali-operator
    auth:
      openid:
        authentication_timeout: 300
        authorization_endpoint: ""
        client_id: ""
        insecure_skip_verify_tls: false
        issuer_uri: ""
        scopes:
        - openid
        - profile
        - email
        username_claim: sub
      openshift:
        client_id_prefix: kiali
      strategy: anonymous
    deployment:
      accessible_namespaces:
      - '**'
      additional_service_yaml: {}
      affinity:
        node: {}
        pod: {}
        pod_anti: {}
      custom_dashboards:
        excludes:
        - ""
        includes:
        - '*'
      image_name: quay.io/kiali/kiali
      image_pull_policy: Always
      image_pull_secrets: []
      image_version: v1.25
      ingress_enabled: false
      namespace: istio-system
      node_selector: {}
      override_ingress_yaml:
        metadata: {}
      pod_annotations: {}
      priority_class_name: ""
      replicas: 1
      resources: {}
      secret_name: kiali
      service_annotations: {}
      service_type: ""
      tolerations: []
      verbose_mode: "3"
      version_label: v1.22.0
      view_only_mode: false
    extensions:
      iter_8:
        enabled: false
      threescale:
        adapter_name: threescale
        adapter_port: "3333"
        adapter_service: threescale-istio-adapter
        enabled: false
        template_name: threescale-authorization
    external_services:
      grafana:
        auth:
          ca_file: ""
          insecure_skip_verify: false
          password: ""
          token: ""
          type: none
          use_kiali_token: false
          username: ""
        dashboards:
        - name: Istio Service Dashboard
          variables:
            namespace: var-namespace
            service: var-service
        - name: Istio Workload Dashboard
          variables:
            namespace: var-namespace
            workload: var-workload
        enabled: true
        in_cluster_url: http://grafana:3000
        url: ""
      istio:
        istio_identity_domain: svc.cluster.local
        istio_sidecar_annotation: sidecar.istio.io/status
        istio_status_enabled: true
        url_service_version: http://istiod:15014/version
      prometheus:
        auth:
          ca_file: ""
          insecure_skip_verify: false
          password: ""
          token: ""
          type: none
          use_kiali_token: false
          username: ""
        custom_metrics_url: http://prometheus:9090
        url: http://prometheus:9090
      tracing:
        auth:
          ca_file: ""
          insecure_skip_verify: false
          password: ""
          token: ""
          type: none
          use_kiali_token: false
          username: ""
        enabled: true
        in_cluster_url: http://tracing/jaeger
        namespace_selector: true
        url: ""
        whitelist_istio_system:
        - jaeger-query
        - istio-ingressgateway
    identity:
      cert_file: ""
      private_key_file: ""
    installation_tag: ""
    istio_labels:
      app_label_name: app
      version_label_name: version
    istio_namespace: istio-system
    kubernetes_config:
      burst: 200
      cache_duration: 300
      cache_enabled: true
      cache_istio_types:
      - DestinationRule
      - Gateway
      - ServiceEntry
      - VirtualService
      cache_namespaces:
      - .*
      cache_token_namespace_duration: 10
      excluded_workloads:
      - CronJob
      - DeploymentConfig
      - Job
      - ReplicationController
      qps: 175
    login_token:
      expiration_seconds: 86400
      signing_key: CHANGEME
    server:
      address: ""
      audit_log: true
      cors_allow_all: false
      gzip_enabled: true
      metrics_enabled: true
      metrics_port: 9090
      port: 20001
      web_fqdn: ""
      web_root: /kiali
      web_schema: ""

---
# Source: kiali-server/templates/role-viewer.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kiali-viewer
  labels:
    helm.sh/chart: kiali-server-1.22.0
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali-server
    version: "v1.22.0"
    app.kubernetes.io/version: "v1.22.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [ "" ]
    resources:
      - configmaps
      - endpoints
      - namespaces
      - nodes
      - pods
      - pods/log
      - replicationcontrollers
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "extensions", "apps" ]
    resources:
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "autoscaling" ]
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "batch" ]
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - config.istio.io
      - networking.istio.io
      - authentication.istio.io
      - rbac.istio.io
      - security.istio.io
    resources: [ "*" ]
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "authentication.maistra.io" ]
    resources:
      - servicemeshpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "rbac.maistra.io" ]
    resources:
      - servicemeshrbacconfigs
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "apps.openshift.io" ]
    resources:
      - deploymentconfigs
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "project.openshift.io" ]
    resources:
      - projects
    verbs:
      - get
  - apiGroups: [ "route.openshift.io" ]
    resources:
      - routes
    verbs:
      - get
  - apiGroups: [ "monitoring.kiali.io" ]
    resources:
      - monitoringdashboards
    verbs:
      - get
      - list
  - apiGroups: [ "iter8.tools" ]
    resources:
      - experiments
    verbs:
      - get
      - list

---
# Source: kiali-server/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kiali
  labels:
    helm.sh/chart: kiali-server-1.22.0
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali-server
    version: "v1.22.0"
    app.kubernetes.io/version: "v1.22.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [ "" ]
    resources:
      - configmaps
      - endpoints
      - namespaces
      - nodes
      - pods
      - pods/log
      - replicationcontrollers
      - services
    verbs:
      - get
      - list
      - patch
      - watch
  - apiGroups: [ "extensions", "apps" ]
    resources:
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - patch
      - watch
  - apiGroups: [ "autoscaling" ]
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups: [ "batch" ]
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - patch
      - watch
  - apiGroups:
      - config.istio.io
      - networking.istio.io
      - authentication.istio.io
      - rbac.istio.io
      - security.istio.io
    resources: [ "*" ]
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - watch
  - apiGroups: [ "authentication.maistra.io" ]
    resources:
      - servicemeshpolicies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - watch
  - apiGroups: [ "rbac.maistra.io" ]
    resources:
      - servicemeshrbacconfigs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - watch
  - apiGroups: [ "apps.openshift.io" ]
    resources:
      - deploymentconfigs
    verbs:
      - get
      - list
      - patch
      - watch
  - apiGroups: [ "project.openshift.io" ]
    resources:
      - projects
    verbs:
      - get
  - apiGroups: [ "route.openshift.io" ]
    resources:
      - routes
    verbs:
      - get
  - apiGroups: [ "monitoring.kiali.io" ]
    resources:
      - monitoringdashboards
    verbs:
      - get
      - list
  - apiGroups: [ "iter8.tools" ]
    resources:
      - experiments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - watch

---
# Source: kiali-server/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kiali
  labels:
    helm.sh/chart: kiali-server-1.22.0
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali-server
    version: "v1.22.0"
    app.kubernetes.io/version: "v1.22.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kiali
subjects:
  - kind: ServiceAccount
    name: kiali
    namespace: istio-system

---
# Source: kiali-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kiali
  namespace: istio-system
  labels:
    helm.sh/chart: kiali-server-1.22.0
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali-server
    version: "v1.22.0"
    app.kubernetes.io/version: "v1.22.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kiali.io/api-spec: https://kiali.io/api
    kiali.io/api-type: rest
spec:
  ports:
    - name: http
      protocol: TCP
      port: 20001
    - name: http-metrics
      protocol: TCP
      port: 9090
  selector:
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali-server

---
# Source: kiali-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kiali
  namespace: istio-system
  labels:
    helm.sh/chart: kiali-server-1.22.0
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali-server
    version: "v1.22.0"
    app.kubernetes.io/version: "v1.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kiali
      app.kubernetes.io/instance: kiali-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: kiali
      labels:
        helm.sh/chart: kiali-server-1.22.0
        app: kiali
        app.kubernetes.io/name: kiali
        app.kubernetes.io/instance: kiali-server
        version: "v1.22.0"
        app.kubernetes.io/version: "v1.22.0"
        app.kubernetes.io/managed-by: Helm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        kiali.io/runtimes: go,kiali
    spec:
      serviceAccountName: kiali
      containers:
        - image: "quay.io/kiali/kiali:v1.25"
          imagePullPolicy: Never
          name: kiali
          command:
            - "/opt/kiali/kiali"
            - "-config"
            - "/kiali-configuration/config.yaml"
            - "-v"
            - "3"
          ports:
            - name: api-port
              containerPort: 20001
            - name: http-metrics
              containerPort: 9090
          readinessProbe:
            httpGet:
              path: /kiali/healthz
              port: api-port
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /kiali/healthz
              port: api-port
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
          env:
            - name: ACTIVE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: kiali-configuration
              mountPath: "/kiali-configuration"
            - name: kiali-cert
              mountPath: "/kiali-cert"
            - name: kiali-secret
              mountPath: "/kiali-secret"
      volumes:
        - name: kiali-configuration
          configMap:
            name: kiali
        - name: kiali-cert
          secret:
            secretName: istio.kiali-service-account
            optional: true
        - name: kiali-secret
          secret:
            secretName: kiali
            optional: true

---
# Source: kiali-server/templates/dashboards/envoy.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: envoy
  labels:
    helm.sh/chart: kiali-server-1.22.0
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali-server
    version: "v1.22.0"
    app.kubernetes.io/version: "v1.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  title: Envoy Metrics
  #  discoverOn: "envoy_server_uptime"
  items:
    - chart:
        name: "Pods uptime"
        spans: 4
        metricName: "envoy_server_uptime"
        dataType: "raw"
    - chart:
        name: "Allocated memory"
        unit: "bytes"
        spans: 4
        metricName: "envoy_server_memory_allocated"
        dataType: "raw"
        min: 0
    - chart:
        name: "Heap size"
        unit: "bytes"
        spans: 4
        metricName: "envoy_server_memory_heap_size"
        dataType: "raw"
        min: 0
    - chart:
        name: "Upstream active connections"
        spans: 6
        metricName: "envoy_cluster_upstream_cx_active"
        dataType: "raw"
    - chart:
        name: "Upstream total requests"
        spans: 6
        metricName: "envoy_cluster_upstream_rq_total"
        unit: "rps"
        dataType: "rate"
    - chart:
        name: "Downstream active connections"
        spans: 6
        metricName: "envoy_listener_downstream_cx_active"
        dataType: "raw"
    - chart:
        name: "Downstream HTTP requests"
        spans: 6
        metricName: "envoy_listener_http_downstream_rq"
        unit: "rps"
        dataType: "rate"
---
# Source: kiali-server/templates/dashboards/kiali.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: kiali
  labels:
    helm.sh/chart: kiali-server-1.22.0
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali-server
    version: "v1.22.0"
    app.kubernetes.io/version: "v1.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  title: Kiali Internal Metrics
  items:
    - chart:
        name: "API processing duration"
        unit: "seconds"
        spans: 6
        metricName: "kiali_api_processing_duration_seconds"
        dataType: "histogram"
        aggregations:
          - label: "route"
            displayName: "Route"
    - chart:
        name: "Functions processing duration"
        unit: "seconds"
        spans: 6
        metricName: "kiali_go_function_processing_duration_seconds"
        dataType: "histogram"
        aggregations:
          - label: "function"
            displayName: "Function"
          - label: "package"
            displayName: "Package"
    - chart:
        name: "Failures"
        spans: 12
        metricName: "kiali_go_function_failures_total"
        dataType: "raw"
        aggregations:
          - label: "function"
            displayName: "Function"
          - label: "package"
            displayName: "Package"

---
# Source: kiali-server/templates/dashboards/micrometer-1.0.6-jvm-pool.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: micrometer-1.0.6-jvm-pool
  labels:
    helm.sh/chart: kiali-server-1.22.0
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali-server
    version: "v1.22.0"
    app.kubernetes.io/version: "v1.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  runtime: JVM
  title: JVM Pool Metrics
  discoverOn: "jvm_buffer_total_capacity_bytes"
  items:
    - chart:
        name: "Pool buffer memory used"
        unit: "bytes"
        spans: 4
        metricName: "jvm_buffer_memory_used_bytes"
        dataType: "raw"
        aggregations:
          - label: "id"
            displayName: "Pool"
    - chart:
        name: "Pool buffer capacity"
        unit: "bytes"
        spans: 4
        metricName: "jvm_buffer_total_capacity_bytes"
        dataType: "raw"
        aggregations:
          - label: "id"
            displayName: "Pool"
    - chart:
        name: "Pool buffer count"
        unit: "bytes"
        spans: 4
        metricName: "jvm_buffer_count"
        dataType: "raw"
        aggregations:
          - label: "id"
            displayName: "Pool"

---
# Source: kiali-server/templates/dashboards/micrometer-1.1-jvm.yaml
apiVersion: "monitoring.kiali.io/v1alpha1"
kind: MonitoringDashboard
metadata:
  name: micrometer-1.1-jvm
  labels:
    helm.sh/chart: kiali-server-1.22.0
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali-server
    version: "v1.22.0"
    app.kubernetes.io/version: "v1.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  runtime: JVM
  title: JVM Metrics
  discoverOn: "jvm_threads_live_threads"
  items:
    - chart:
        name: "Memory used"
        unit: "bytes"
        spans: 4
        metricName: "jvm_memory_used_bytes"
        dataType: "raw"
        aggregations:
          - label: "area"
            displayName: "Area"
          - label: "id"
            displayName: "Space"
    - chart:
        name: "Memory commited"
        unit: "bytes"
        spans: 4
        metricName: "jvm_memory_committed_bytes"
        dataType: "raw"
        aggregations:
          - label: "area"
            displayName: "Area"
          - label: "id"
            displayName: "Space"
    - chart:
        name: "Memory max"
        unit: "bytes"
        spans: 4
        metricName: "jvm_memory_max_bytes"
        dataType: "raw"
        aggregations:
          - label: "area"
            displayName: "Area"
          - label: "id"
            displayName: "Space"

    - chart:
        name: "Total live threads"
        spans: 4
        metricName: "jvm_threads_live_threads"
        dataType: "raw"
    - chart:
        name: "Daemon threads"
        spans: 4
        metricName: "jvm_threads_daemon_threads"
        dataType: "raw"
    - chart:
        name: "Threads states"
        spans: 4
        metricName: "jvm_threads_states_threads"
        dataType: "raw"
        aggregations:
          - label: "state"
            displayName: "State"
---
